Откликалась на вакансию Тестировщика с требуемым опытом от 1,5 лет в феврале 2023г, решила попробовать свои силы. Фидбэк не получен.

Задача 1.
ТЗ: Разработать форму Входа в систему. На форме должно быть 3 элемента управления: поле E-mail, поле Пароль и кнопка для входа в систему. После входа в систему пользователь должен оказаться на страницы, с которой была открыта форма Входа.
Задание: Написать список тест-кейсов. Если будут выявлены проблемы, оформить баги.

Так как дефекты лучше исправлять на ранних стадиях, то начнем с тестирования документации.
В представленном ТЗ видно, что в Форме входа в систему нет возможности восстановить пароль, если его пользователь его забыл.

Создаем «Запрос на изменение (улучшение)»: «ТЗ.  Отсутствует возможность восстановления пароля для пользователей» 
Шаги:
Открыть техзадание на пункте N «Разработка формы Входа в систему»
Ожидаемый результат: в форме Входа в систему должно быть 4 элемента управления: поле E-mail, поле Пароль, кнопка для входа в систему, кнопка/ссылка «Забыли пароль?». 
Фактический результат: в форме Входа в систему должно быть 3 элемента управления: поле E-mail, поле Пароль и кнопка для входа в систему. 

В задании сказано «написать список тест-кейсов», а не сами тест-кейсы. 
Но для наглядности, и в качестве примера моего понимания написания ТК, прикладываю несколько  тест-кейсов в качестве образца.

Тест-кейсы
1)	Успешная авторизация по паре email/пароль
Предусловия:
•	Наличие зарегистрированного аккаунта по email
•	Отсутствие авторизации в текущей сессии браузера
Шаги:                                                           Ожидаемый результат:
1. Открыть сайт                                   –            Сайт открыт. Представлены формы ввода email и пароля
2. В поле ввода email ввести действительный email –            Поле заполнено
3. В поле ввода Пароль ввести правильный пароль   –            Поле заполнено
4. Нажать на кнопку Войти                         –            Авторизация успешна. Открыта страница, с которой была открыта форма Входа.


2) Проверка валидаций ввода email /пароль
Предусловия:
•	Наличие зарегистрированного аккаунта по email
•	Отсутствие авторизации в текущей сессии браузера
Шаги:
1. Открыть сайт                                      – Сайт открыт. Представлены формы ввода email и пароля
2. Нажать на кнопку Войти                            – Представлено сообщение: «Не все поля заполнены»
3. Заполнить поле ввода email                        – Поле ввода заполнено
4. Нажать на кнопку Войти                            - Представлено сообщение: «Не все поля заполнены»
5. Очистить поле ввода email                         – Поле очищено
6. Заполнить поле ввода Пароль                       – Поле ввода заполнено
7. Нажать на кнопку Войти                            – Представлено сообщение: «Не все поля заполнены»
8. Заполнить поле ввода email невалидными данными    – Поле ввода заполнено
9. Нажать на кнопку Войти                            – Представлено сообщение: «Неправильный логин или пароль»

3)	Неуспешная авторизация по паре email/пароль
Предусловия:
•	Наличие зарегистрированного аккаунта по email
•	Отсутствие авторизации в текущей сессии браузера
Шаги:
1. Открыть сайт                                     – Сайт открыт. Представлены формы ввода email и пароля
2. В поле ввода email ввести действительный email   – Поле заполнено
3. В поле ввода Пароль ввести неправильный пароль   – Поле заполнено
4. Нажать на кнопку Войти                           – Представлено валидационное сообщение: «E-mail или пароль указаны неверно.»


Список тест-кейсов:
Сначала проведем позитивные тест-кейсы, чтобы проверить, что программное обеспечение выполняет ту функцию, для решения которой оно создавалось:

1.	Ввeсти действительный email (домены: .ru, .com) и корректный пароль. Ожидаемый результат: открыта страница, с которой была открыта форма Входа.
Выйти из системы. Почистить кэш и куки.
2.	Ввeсти действительный email (c российским доменом: .ру ) и корректный пароль. Ожидаемый результат: открыта страница, с которой была открыта форма Входа.
Выйти из системы. Почистить кэш и куки.
3.	Открыть первый бразуер. Ввeсти действительный email и корректный пароль. Открыть второй браузер. Ввeсти тот же самый действительный email и корректный пароль. Ожидаемый результат: открыта страница, с которой была открыта форма Входа.
Выйти из системы. Почистить кэш и куки.
4.	Открыть браузер. Ввeсти действительный email и корректный пароль. Отключить интернет. Получить «страница недоступна». Подключить интернет обратно. Зайти на сайт. Ожидаемый результат: Открыта форма для входа в систему.
Выйти из системы. Почистить кэш и куки.
5.	Ввeсти корректный email и корректный пароль. Ожидаемый результат: открыта страница, с которой была открыта форма Входа. Нажать на кнопку «Назад» в браузере. Ожидаемый результат: остаюсь на той же странице, с которой была открыта форма Входа.
Выйти из системы. Почистить кэш и куки.

Негативные сценарии проверок, чтоб проверить что некорректные данные корректно обрабатываются.
6.	Оставить оба поля пустыми. Нажать на кнопку Войти. Ожидаемый результат: Представлено сообщение: «Не все поля заполнены»
7.	Оставить пустое поле email. Нажать на кнопку Войти. Ожидаемый результат: Представлено сообщение: «Не все поля заполнены»
8.	Оставить пустое поле пароль. Нажать на кнопку Войти. Ожидаемый результат: Представлено сообщение: «Не все поля заполнены» 
9.	Проверка граничных значений email и пароля (уточнить минимальную и максимальную длину по ТЗ) 
10.	Ввeсти корректный* email и некорректный пароль. Ожидаемый результат: Валидационное сообщение
11.	 Ввeсти некорректный* email, но корректный пароль. Ожидаемый результат: Валидационное сообщение
*Пример тестовых данных для проверки некорректного email:
Oivanov43@ test.gmail.com – email  с доменом с двумя точками
Oivanov43 – email без домена
Oivanov43@ gmailcom -email без точки в домене
Oi va nov 43@mail.ru – email с пробелами)
12.	Ввeсти некорректный email и некорректный пароль. Ожидаемый результат: Валидационное сообщение
13.	В поле email ввeсти корректный пароль, а в поле пароля ввести корректный email. Ожидаемый результат: Валидационное сообщение
14.	Ввeсти в поле email сложную последовательность символов вроде «»‘~!@#$%^&*()?>,./\<][ /*<!—«», «${code}»;—> Ожидаемый результат: Валидационное сообщение
15.	Ввeсти в поле email текст, состоящий из одних пробелов. Ожидаемый результат: Валидационное сообщение
16.	Ввeсти в поле email правильный email, начинающийся с нескольких пробелов, и правильный пароль. Ожидаемый результат: Валидационное сообщение
17.	Ввeсти в поле email правильный email, после которого следуют нескольких пробелов, и правильный пароль. Ожидаемый результат: Валидационное сообщение
18.	Проверить блокируется ли акаунт/IP того, кто введет n-количество раз не правильный пароль

Деструктивные проверки, чтоб убедиться, что некорректные, небезопасные также корректно обрабатываются и не сломают систему. 
19.	Ввeсти email <script>alert(123)</script> и корректный пароль. Ожидаемый результат: Сообщение об ошибке
20.	Ввeсти в поле email SQL запрос (‘ or ‘a’ = ‘a’; DROP TABLE user; SELECT * FROM blog WHERE code LIKE ‘a%’;)  Ожидаемый результат: Сообщение об ошибке
21.	Ввeсти в поле email скрипт (<script>alert(«Hello, world!»)</alert>, <script>document.getElementByID(«…»).disabled=true</script>) Ожидаемый результат: Сообщение об ошибке
22.	Ввeсти в поле email html-теги (<form action=»http://live.hh.ru»><input type=»submit»></form>) Ожидаемый результат: Сообщение об ошибке



Задача 2.
ТЗ: Открывать материалы в приложении, если оно установлено на мобильном устройстве.
Вводные данные: На каждой странице материала есть 2 кнопки поделиться: Вконтакте и в Одноклассниках, а так же кнопка скопировать ссылку на материал.
Задание: Необходимо составить чек-лист для проведения полноценного тестирования нового и смежного функционала, который мог быть затронут в ходе изменений.
После внесения любых изменений следует проводить регрессионное тестирование для подтверждения того факта, что существующая ранее функциональность работает, как и прежде; что новый и смежный функционала, который мог быть затронут в ходе изменений, не сломан. Поэтому надо проверять интеграции со сторонними системами, в том числе и на безопасность, так как в аккаунтах пользователей есть чувствительная информация, которая не должна подвергаться риску утечки или несанкционированного доступа, и чтоб нам не занести от пользователей вредоностный контент. 

Чек-лист
1.Проверка возможности поделиться новостью в Вконтакте 
2.Проверка возможности поделиться новостью в Одноклассниках
3.Проверка возможности поделиться новостью доступной только по подписке при наличии подписки
4.Проверка возможности поделиться новостью доступной только по подписке при отсутствии подписки
5.Проверка возможности поделиться новостью доступной всем
6.Проверка возможности скопировать ссылку на материал 
7.Проверка возможности открыть скопированную ссылку в разных браузерах
8.Проверка возможности поделиться новостью большого объема
9.Проверки UX/UI:
Кнопки имеют необходимый размер и подходят для больших пальцев.
Кнопки расположены в одной и той же части экрана (под новостью), чтобы избежать путаницы у пользователей.
Значок Вконтакте является естественным и соответствуют приложению.
Значок Одноклассники является естественным и соответствуют приложению.
10.Проверка возможности поделиться новостью при увеличения и уменьшения масштаба экрана.
11.Проверка возможности возврата или отмены действия в случае нажатия не на ту кнопку.
12.Проверка возможности поделиться новостью при смене ориентации экрана.
13.Проверка возможности поделиться новостью при внешних прерываниях.
14.Проверка возможности поделиться новостью при нестабильной сети.
15.Проверка возможности поделиться новостью при сбое питания (разряженная батарея).


Задача 3.
Письмо в техподдержку: Я зарегистрировался  вчера на вашем сайте, но не могу войти в систему. Мой логин: login1, пароль – qwe123
Задание: Описать способы и шаги по локализации данной проблемы.

Уточню, есть ли еще аналогичные обращения, чтобы понять насколько массовая проблема.
Если есть возможность, уточню с какой операционной системы, браузера пользователь пытался войти.
Если этой информации нет, открою сайт в браузере Google Chrome (по статистике это самый популярный браузер).
Очищу кеш и куки. Проверю отсутствие авторизаций в текущей сессии браузера.
Введу в поле логин: login1
Введу в поле пароль: qwe123
Нажму кнопку Войти
Если в авторизации будет отказано, то очищу кеш и куки, проверю отсутствие авторизаций в текущей сессии браузера и введу действительные тестовые данные, 
чтоб проверить, чтоб под ними авторизация возможна.
- Если с действительными тестовыми данными в авторизации будет отказано, воспроизведу вход еще раз, чтоб убедиться, что не ошиблась при вводе данных в первый раз. 
Если и во второй раз будет отказано*, проверю в баг-трекинговой системе есть ли баг-репорты на этот баг
(так называемая проверка на дубликаты), есть ли новые обращения с данной проблемой. 
Если есть дубликат – дополню новой информацией при необходимости.
Если нет – заведу баг-репорт «Авторизация. Не работает форма входа для зарегистрированных ранее пользователей».
*Также, если есть такая практика в компании (может и не быть, чтоб не засорять тестовыми данными БД или сложности чистки),
можно, при отказе в авторизации по действительным тестовым данным во второй раз, то после очистки кеша и кук, зарегистрироваться в системе с новыми тестовыми данными.
Очистить кеш и куки, выйти из системы. Зайти снова и попробовать авторизироваться по новым данным. 
Чтоб проверить, что авторизация не работает ни для тех, кто регистрировался ране, ни для тех, кто регистрируется сейчас.

- Если с действительными тестовыми данными авторизация будет успешной, то при наличии доступа к базе данных проверю в ней есть ли там пользователь с логин login1 , 
в правильные ли поля «легли» его данные при регистрации. Если данных нет, то возможно, регистрация не удалась и надо, чтоб пользователь ее повторил.
Если же данные есть в базе данных, но сохранились некорректно (например, не сохранены данные в обязательных для заполнения полях), то: проверю в баг-трекинговой системе есть ли баг-репорты на этот баг. 
Если есть дубликат – дополню новой информацией при необходимости.
Если нет – заведу баг-репорт, например, «База данных. Данные пользователей при регистрации не сохраняются в поля обязательные для заполнения».




